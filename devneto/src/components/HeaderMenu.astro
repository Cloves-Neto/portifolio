---
interface NavItem {
  label: string;
  href: string;
  active?: boolean;
}

const navItems: NavItem[] = [
  { label: "home", href: "#home", active: true },
  { label: "about", href: "#about" },
  { label: "services", href: "#services" },
  { label: "portfolio", href: "#portifolio" },
  { label: "contact", href: "#contact" },
];
---

<header class="bg-[#140f2dbe] backdrop-blur-lg px-4 py-3 fixed top-0 left-0 z-40 w-full">
  <nav class="mx-auto flex items-center justify-between max-w-[1980px]">

    <a href="/" class="flex items-center gap-2">
      <div class="flex size-12 items-center justify-center rounded-full p-2">
        <svg
          class="w-14 h-14 text-purple-500"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
          ></path>
        </svg>
      </div>
    </a>

    <!-- Mobile Menu Button -->
    <button
      id="menuToggle"
      class="rounded-lg p-2 text-gray-400 hover:bg-gray-700 hover:text-white  md:hidden"
      aria-label="Toggle menu"
    >
      <svg
        class="size-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"
        ></path>
      </svg>
    </button>

    <!-- Desktop Navigation -->
    <div class="w-full hidden justify-center items-center gap-8 md:flex relative">
      <div class="flex gap-4 justify-center items-center">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class={`px-3 py-2 text-md font-bold ${
                item.active
                  ? "text-purple-500"
                  : "text-gray-300 hover:text-purple-500"
              }`}
            >
              {item.label}
            </a>
          ))
        }
      </div>

      <a href="/menucv" class="px-6 py-2 text-sm text-white hover:text-purple-500 text-center absolute right-0">
        Download CV
      </a>
    </div>

    <!-- Mobile Navigation -->
    <div
      id="mobileMenu"
      class="absolute left-0 top-16 z-50 hidden w-full bg-[#1a1a2e] px-4 py-2 md:hidden"
    >
      <div class="flex flex-col gap-2 text-center">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class={`rounded-lg px-3 py-2 text-sm ${
                item.active
                  ? "text-purple-500"
                  : "text-gray-300 hover:text-purple-500"
              }`}
            >
              {item.label}
            </a>
          ))
        }
        <button class="mt-2 w-full rounded-full bg-purple-600 px-6 py-2 text-sm text-white hover:bg-purple-700">
          Download CV
        </button>
      </div>
    </div>
  </nav>
</header>

<script>
  const menuToggle = document.getElementById('menuToggle');
  const mobileMenu = document.getElementById('mobileMenu');
  const menuIcon = menuToggle?.querySelector('svg');

  menuToggle?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
    if (menuIcon) {
      if (mobileMenu?.classList.contains('hidden')) {
        menuIcon.innerHTML = `<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>`;
      } else {
        menuIcon.innerHTML = `<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>`;
      }
    }
  });
</script>